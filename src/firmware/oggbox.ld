/*
 * This file is part of the libopenstm32 project.
 *
 * Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* Linker script for Olimex STM32-H103 (STM32F103RBT6, 128K flash, 20K RAM). */

/* Define memory regions. */
MEMORY
{
	rom (rx) : ORIGIN = 0x08000000, LENGTH = 128K
	ram (rwx) : ORIGIN = 0x20000000, LENGTH = 20K
}

/* Include the common ld script from libopenstm32. */
EXTERN (vector_table)

/* Define sections. */
SECTIONS
{
        . = ORIGIN(rom);

        .text : {
                *(.vectors)     /* Vector table */
                *(.text)        /* Program code */
                *(.rodata)      /* Read-only data */
                . = ALIGN(4);
                _etext = .;
        } >rom
        /*
        * Another section used by C++ stuff, appears when using newlib with
        * 64bit (long long) printf support
        */
        .ARM.extab : {
                *(.ARM.extab*)
        } >rom
        .ARM.exidx : {
                __exidx_start = .;
                *(.ARM.exidx*)
                __exidx_end = .;
        } >rom
        . = ORIGIN(ram);

        .data : {
                _data = .;
                *(.data);        /* Read-write initialized data */
                _edata = .;
        } >ram AT >rom

        .bss : {
                _bss = .;
                *(.bss)         /* Read-write zero initialized data */
                _ebss = .;
        } >ram AT >rom
  end = .;
}

PROVIDE(_stack = 0x20005000);

